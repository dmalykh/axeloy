// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	message "github.com/dmalykh/axeloy/axeloy/message"
	driver "github.com/dmalykh/axeloy/axeloy/way/driver"

	mock "github.com/stretchr/testify/mock"

	profile "github.com/dmalykh/axeloy/axeloy/profile"
)

// Sender is an autogenerated mock type for the Sender type
type Sender struct {
	mock.Mock
}

// GetName provides a mock function with given fields:
func (_m *Sender) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetTitle provides a mock function with given fields:
func (_m *Sender) GetTitle() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Send provides a mock function with given fields: ctx, recipient, _a2
func (_m *Sender) Send(ctx context.Context, recipient profile.Profile, _a2 message.Message) ([]string, error) {
	ret := _m.Called(ctx, recipient, _a2)

	var r0 []string
	if rf, ok := ret.Get(0).(func(context.Context, profile.Profile, message.Message) []string); ok {
		r0 = rf(ctx, recipient, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, profile.Profile, message.Message) error); ok {
		r1 = rf(ctx, recipient, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetConfig provides a mock function with given fields: config
func (_m *Sender) SetConfig(config driver.DriverConfig) {
	_m.Called(config)
}

// SetWayParams provides a mock function with given fields: params
func (_m *Sender) SetWayParams(params driver.Params) {
	_m.Called(params)
}

// Stop provides a mock function with given fields:
func (_m *Sender) Stop() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ValidateProfile provides a mock function with given fields: ctx, p
func (_m *Sender) ValidateProfile(ctx context.Context, p profile.Profile) (map[string]string, error) {
	ret := _m.Called(ctx, p)

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func(context.Context, profile.Profile) map[string]string); ok {
		r0 = rf(ctx, p)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, profile.Profile) error); ok {
		r1 = rf(ctx, p)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
